plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'concert'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // postgres
    runtimeOnly 'org.postgresql:postgresql'
    // web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // security
    implementation 'org.springframework.boot:spring-boot-starter-security:3.2.1'
    // lombok
    compileOnly 'org.projectlombok:lombok'
    // valid
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.2.1'
    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    // spring retry
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // kafka
    implementation 'org.springframework.kafka:spring-kafka'
    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    // mail sender
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
